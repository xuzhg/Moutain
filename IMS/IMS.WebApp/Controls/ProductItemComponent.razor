@inject NavigationManager NavigationMgr
@inject IDeleteProductUseCase DeleteProductUseCase

@if (pd != null)
{
    <tr>
        <td>@pd.ProductName</td>
        <td>@pd.Quantity</td>
        <td>@pd.Price.ToString("c")</td>
        <td>
            <button type="button" class="btn btn-light" @onclick="@(() => EditProduct(pd.ProductId))">Edit</button>
            <button type="button" class="btn btn-light" @onclick="@(async () =>await DeleteProduct(pd.ProductId))">Delete</button>
        </td>
    </tr>
}

@code {
    [Parameter]
    public Product? pd { get; set; }

    [Parameter]
    public EventCallback OnProductDeleted { get; set; }

    private void EditProduct(int pdId)
    {
        NavigationMgr.NavigateTo($"/editproduct/{pdId}");
    }

    private async Task DeleteProduct(int pdId)
    {
        //NavigationMgr.NavigateTo($"/editproduct/{pdId}");
        await DeleteProductUseCase.ExecuteAsync(pdId);
        //NavigationMgr.NavigateTo("/products");

        await OnProductDeleted.InvokeAsync();
    }
}
